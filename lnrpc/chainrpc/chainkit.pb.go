// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: chainrpc/chainkit.proto

package chainrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBlockRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The hash of the requested block.
	BlockHash     []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockRequest) Reset() {
	*x = GetBlockRequest{}
	mi := &file_chainrpc_chainkit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockRequest) ProtoMessage() {}

func (x *GetBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_chainkit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockRequest.ProtoReflect.Descriptor instead.
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return file_chainrpc_chainkit_proto_rawDescGZIP(), []int{0}
}

func (x *GetBlockRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

// TODO(ffranr): The neutrino GetBlock response includes many
// additional helpful fields. Consider adding them here also.
type GetBlockResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The raw bytes of the requested block.
	RawBlock      []byte `protobuf:"bytes,1,opt,name=raw_block,json=rawBlock,proto3" json:"raw_block,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockResponse) Reset() {
	*x = GetBlockResponse{}
	mi := &file_chainrpc_chainkit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockResponse) ProtoMessage() {}

func (x *GetBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_chainkit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockResponse.ProtoReflect.Descriptor instead.
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return file_chainrpc_chainkit_proto_rawDescGZIP(), []int{1}
}

func (x *GetBlockResponse) GetRawBlock() []byte {
	if x != nil {
		return x.RawBlock
	}
	return nil
}

type GetBlockHeaderRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The hash of the block with the requested header.
	BlockHash     []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockHeaderRequest) Reset() {
	*x = GetBlockHeaderRequest{}
	mi := &file_chainrpc_chainkit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockHeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeaderRequest) ProtoMessage() {}

func (x *GetBlockHeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_chainkit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeaderRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHeaderRequest) Descriptor() ([]byte, []int) {
	return file_chainrpc_chainkit_proto_rawDescGZIP(), []int{2}
}

func (x *GetBlockHeaderRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type GetBlockHeaderResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The header of the block with the requested hash.
	RawBlockHeader []byte `protobuf:"bytes,1,opt,name=raw_block_header,json=rawBlockHeader,proto3" json:"raw_block_header,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetBlockHeaderResponse) Reset() {
	*x = GetBlockHeaderResponse{}
	mi := &file_chainrpc_chainkit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockHeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHeaderResponse) ProtoMessage() {}

func (x *GetBlockHeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_chainkit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHeaderResponse.ProtoReflect.Descriptor instead.
func (*GetBlockHeaderResponse) Descriptor() ([]byte, []int) {
	return file_chainrpc_chainkit_proto_rawDescGZIP(), []int{3}
}

func (x *GetBlockHeaderResponse) GetRawBlockHeader() []byte {
	if x != nil {
		return x.RawBlockHeader
	}
	return nil
}

type GetBestBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBestBlockRequest) Reset() {
	*x = GetBestBlockRequest{}
	mi := &file_chainrpc_chainkit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBestBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBestBlockRequest) ProtoMessage() {}

func (x *GetBestBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_chainkit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBestBlockRequest.ProtoReflect.Descriptor instead.
func (*GetBestBlockRequest) Descriptor() ([]byte, []int) {
	return file_chainrpc_chainkit_proto_rawDescGZIP(), []int{4}
}

type GetBestBlockResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The hash of the best block.
	BlockHash []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// The height of the best block.
	BlockHeight   int32 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBestBlockResponse) Reset() {
	*x = GetBestBlockResponse{}
	mi := &file_chainrpc_chainkit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBestBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBestBlockResponse) ProtoMessage() {}

func (x *GetBestBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_chainkit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBestBlockResponse.ProtoReflect.Descriptor instead.
func (*GetBestBlockResponse) Descriptor() ([]byte, []int) {
	return file_chainrpc_chainkit_proto_rawDescGZIP(), []int{5}
}

func (x *GetBestBlockResponse) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *GetBestBlockResponse) GetBlockHeight() int32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetBlockHashRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Block height of the target best chain block.
	BlockHeight   int64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockHashRequest) Reset() {
	*x = GetBlockHashRequest{}
	mi := &file_chainrpc_chainkit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockHashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHashRequest) ProtoMessage() {}

func (x *GetBlockHashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_chainkit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHashRequest.ProtoReflect.Descriptor instead.
func (*GetBlockHashRequest) Descriptor() ([]byte, []int) {
	return file_chainrpc_chainkit_proto_rawDescGZIP(), []int{6}
}

func (x *GetBlockHashRequest) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

type GetBlockHashResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The hash of the best block at the specified height.
	BlockHash     []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockHashResponse) Reset() {
	*x = GetBlockHashResponse{}
	mi := &file_chainrpc_chainkit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockHashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockHashResponse) ProtoMessage() {}

func (x *GetBlockHashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chainrpc_chainkit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockHashResponse.ProtoReflect.Descriptor instead.
func (*GetBlockHashResponse) Descriptor() ([]byte, []int) {
	return file_chainrpc_chainkit_proto_rawDescGZIP(), []int{7}
}

func (x *GetBlockHashResponse) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

var File_chainrpc_chainkit_proto protoreflect.FileDescriptor

const file_chainrpc_chainkit_proto_rawDesc = "" +
	"\n" +
	"\x17chainrpc/chainkit.proto\x12\bchainrpc\"0\n" +
	"\x0fGetBlockRequest\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\fR\tblockHash\"/\n" +
	"\x10GetBlockResponse\x12\x1b\n" +
	"\traw_block\x18\x01 \x01(\fR\brawBlock\"6\n" +
	"\x15GetBlockHeaderRequest\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\fR\tblockHash\"B\n" +
	"\x16GetBlockHeaderResponse\x12(\n" +
	"\x10raw_block_header\x18\x01 \x01(\fR\x0erawBlockHeader\"\x15\n" +
	"\x13GetBestBlockRequest\"X\n" +
	"\x14GetBestBlockResponse\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\fR\tblockHash\x12!\n" +
	"\fblock_height\x18\x02 \x01(\x05R\vblockHeight\"8\n" +
	"\x13GetBlockHashRequest\x12!\n" +
	"\fblock_height\x18\x01 \x01(\x03R\vblockHeight\"5\n" +
	"\x14GetBlockHashResponse\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x01 \x01(\fR\tblockHash2\xc0\x02\n" +
	"\bChainKit\x12A\n" +
	"\bGetBlock\x12\x19.chainrpc.GetBlockRequest\x1a\x1a.chainrpc.GetBlockResponse\x12S\n" +
	"\x0eGetBlockHeader\x12\x1f.chainrpc.GetBlockHeaderRequest\x1a .chainrpc.GetBlockHeaderResponse\x12M\n" +
	"\fGetBestBlock\x12\x1d.chainrpc.GetBestBlockRequest\x1a\x1e.chainrpc.GetBestBlockResponse\x12M\n" +
	"\fGetBlockHash\x12\x1d.chainrpc.GetBlockHashRequest\x1a\x1e.chainrpc.GetBlockHashResponseB0Z.github.com/lightningnetwork/lnd/lnrpc/chainrpcb\x06proto3"

var (
	file_chainrpc_chainkit_proto_rawDescOnce sync.Once
	file_chainrpc_chainkit_proto_rawDescData []byte
)

func file_chainrpc_chainkit_proto_rawDescGZIP() []byte {
	file_chainrpc_chainkit_proto_rawDescOnce.Do(func() {
		file_chainrpc_chainkit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chainrpc_chainkit_proto_rawDesc), len(file_chainrpc_chainkit_proto_rawDesc)))
	})
	return file_chainrpc_chainkit_proto_rawDescData
}

var file_chainrpc_chainkit_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_chainrpc_chainkit_proto_goTypes = []any{
	(*GetBlockRequest)(nil),        // 0: chainrpc.GetBlockRequest
	(*GetBlockResponse)(nil),       // 1: chainrpc.GetBlockResponse
	(*GetBlockHeaderRequest)(nil),  // 2: chainrpc.GetBlockHeaderRequest
	(*GetBlockHeaderResponse)(nil), // 3: chainrpc.GetBlockHeaderResponse
	(*GetBestBlockRequest)(nil),    // 4: chainrpc.GetBestBlockRequest
	(*GetBestBlockResponse)(nil),   // 5: chainrpc.GetBestBlockResponse
	(*GetBlockHashRequest)(nil),    // 6: chainrpc.GetBlockHashRequest
	(*GetBlockHashResponse)(nil),   // 7: chainrpc.GetBlockHashResponse
}
var file_chainrpc_chainkit_proto_depIdxs = []int32{
	0, // 0: chainrpc.ChainKit.GetBlock:input_type -> chainrpc.GetBlockRequest
	2, // 1: chainrpc.ChainKit.GetBlockHeader:input_type -> chainrpc.GetBlockHeaderRequest
	4, // 2: chainrpc.ChainKit.GetBestBlock:input_type -> chainrpc.GetBestBlockRequest
	6, // 3: chainrpc.ChainKit.GetBlockHash:input_type -> chainrpc.GetBlockHashRequest
	1, // 4: chainrpc.ChainKit.GetBlock:output_type -> chainrpc.GetBlockResponse
	3, // 5: chainrpc.ChainKit.GetBlockHeader:output_type -> chainrpc.GetBlockHeaderResponse
	5, // 6: chainrpc.ChainKit.GetBestBlock:output_type -> chainrpc.GetBestBlockResponse
	7, // 7: chainrpc.ChainKit.GetBlockHash:output_type -> chainrpc.GetBlockHashResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chainrpc_chainkit_proto_init() }
func file_chainrpc_chainkit_proto_init() {
	if File_chainrpc_chainkit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chainrpc_chainkit_proto_rawDesc), len(file_chainrpc_chainkit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chainrpc_chainkit_proto_goTypes,
		DependencyIndexes: file_chainrpc_chainkit_proto_depIdxs,
		MessageInfos:      file_chainrpc_chainkit_proto_msgTypes,
	}.Build()
	File_chainrpc_chainkit_proto = out.File
	file_chainrpc_chainkit_proto_goTypes = nil
	file_chainrpc_chainkit_proto_depIdxs = nil
}
