// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package peersrpc

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PeersClient is the client API for Peers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PeersClient interface {
}

type peersClient struct {
	cc grpc.ClientConnInterface
}

func NewPeersClient(cc grpc.ClientConnInterface) PeersClient {
	return &peersClient{cc}
}

// PeersServer is the server API for Peers service.
// All implementations must embed UnimplementedPeersServer
// for forward compatibility
type PeersServer interface {
	mustEmbedUnimplementedPeersServer()
}

// UnimplementedPeersServer must be embedded to have forward compatible implementations.
type UnimplementedPeersServer struct {
}

func (UnimplementedPeersServer) mustEmbedUnimplementedPeersServer() {}

// UnsafePeersServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PeersServer will
// result in compilation errors.
type UnsafePeersServer interface {
	mustEmbedUnimplementedPeersServer()
}

func RegisterPeersServer(s grpc.ServiceRegistrar, srv PeersServer) {
	s.RegisterService(&Peers_ServiceDesc, srv)
}

// Peers_ServiceDesc is the grpc.ServiceDesc for Peers service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Peers_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "peersrpc.Peers",
	HandlerType: (*PeersServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "peersrpc/peers.proto",
}
