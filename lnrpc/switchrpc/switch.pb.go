// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: switchrpc/switch.proto

package switchrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNSPECIFIED                ErrorCode = 0 // Default value for unset errors.
	ErrorCode_ERROR_CODE_PAYMENT_ID_NOT_FOUND       ErrorCode = 1 // Payment ID was not found.
	ErrorCode_ERROR_CODE_FORWARDING_ERROR           ErrorCode = 2 // Error occurred during forwarding.
	ErrorCode_ERROR_CODE_CLEAR_TEXT_ERROR           ErrorCode = 3 // Clear text error.
	ErrorCode_ERROR_CODE_UNREADABLE_FAILURE_MESSAGE ErrorCode = 4 // Failure message could not be read.
	ErrorCode_ERROR_CODE_DUPLICATE_HTLC             ErrorCode = 5 // HTLC with same ID currently in flight.
	ErrorCode_ERROR_CODE_NO_LINK                    ErrorCode = 6 // No link available for payment.
	ErrorCode_ERROR_CODE_SWITCH_EXITING             ErrorCode = 7 // HTLC switch is exiting.
	ErrorCode_ERROR_CODE_INTERNAL                   ErrorCode = 8 // Opaque internal server error.
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ERROR_CODE_UNSPECIFIED",
		1: "ERROR_CODE_PAYMENT_ID_NOT_FOUND",
		2: "ERROR_CODE_FORWARDING_ERROR",
		3: "ERROR_CODE_CLEAR_TEXT_ERROR",
		4: "ERROR_CODE_UNREADABLE_FAILURE_MESSAGE",
		5: "ERROR_CODE_DUPLICATE_HTLC",
		6: "ERROR_CODE_NO_LINK",
		7: "ERROR_CODE_SWITCH_EXITING",
		8: "ERROR_CODE_INTERNAL",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":                0,
		"ERROR_CODE_PAYMENT_ID_NOT_FOUND":       1,
		"ERROR_CODE_FORWARDING_ERROR":           2,
		"ERROR_CODE_CLEAR_TEXT_ERROR":           3,
		"ERROR_CODE_UNREADABLE_FAILURE_MESSAGE": 4,
		"ERROR_CODE_DUPLICATE_HTLC":             5,
		"ERROR_CODE_NO_LINK":                    6,
		"ERROR_CODE_SWITCH_EXITING":             7,
		"ERROR_CODE_INTERNAL":                   8,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_switchrpc_switch_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_switchrpc_switch_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_switchrpc_switch_proto_rawDescGZIP(), []int{0}
}

type SendOnionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The raw onion packet to be sent across the network.
	OnionBlob []byte `protobuf:"bytes,1,opt,name=onion_blob,json=onionBlob,proto3" json:"onion_blob,omitempty"`
	// The first hop's public key where the onion will be sent.
	FirstHopPubkey []byte `protobuf:"bytes,2,opt,name=first_hop_pubkey,json=firstHopPubkey,proto3" json:"first_hop_pubkey,omitempty"`
	// The total amount in millisatoshis required to complete a payment over
	// this route. This value includes the cumulative fees at each hop. The HTLC
	// extended to the first-hop in the route will need to have at least this
	// many (milli)satoshis.
	Amount int64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// The absolute timelock or CLTV value that should be extended to the first
	// hop in the route. All other hops will decrement the time-lock as
	// described by the onion.
	Timelock uint32 `protobuf:"varint,4,opt,name=timelock,proto3" json:"timelock,omitempty"`
	// The payment hash associated with the HTLC. This is needed for tracking
	// and debugging purposes.
	PaymentHash []byte `protobuf:"bytes,5,opt,name=payment_hash,json=paymentHash,proto3" json:"payment_hash,omitempty"`
	// The attempt ID uniquely identifying this payment attempt. The caller can
	// expect to track results for the payment via this attempt ID.
	AttemptId uint64 `protobuf:"varint,6,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
}

func (x *SendOnionRequest) Reset() {
	*x = SendOnionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_switchrpc_switch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOnionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOnionRequest) ProtoMessage() {}

func (x *SendOnionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_switchrpc_switch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOnionRequest.ProtoReflect.Descriptor instead.
func (*SendOnionRequest) Descriptor() ([]byte, []int) {
	return file_switchrpc_switch_proto_rawDescGZIP(), []int{0}
}

func (x *SendOnionRequest) GetOnionBlob() []byte {
	if x != nil {
		return x.OnionBlob
	}
	return nil
}

func (x *SendOnionRequest) GetFirstHopPubkey() []byte {
	if x != nil {
		return x.FirstHopPubkey
	}
	return nil
}

func (x *SendOnionRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendOnionRequest) GetTimelock() uint32 {
	if x != nil {
		return x.Timelock
	}
	return 0
}

func (x *SendOnionRequest) GetPaymentHash() []byte {
	if x != nil {
		return x.PaymentHash
	}
	return nil
}

func (x *SendOnionRequest) GetAttemptId() uint64 {
	if x != nil {
		return x.AttemptId
	}
	return 0
}

type SendOnionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Indicates if the onion was successfully sent or not.
	// Equivalent to `error_code == ERROR_CODE_UNSPECIFIED`.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// In case of failure, this field will provide more information about the
	// error.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// A code representing the type of error that occurred. This can be used
	// to programmatically distinguish between different kinds of errors.
	ErrorCode ErrorCode `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,enum=switchrpc.ErrorCode" json:"error_code,omitempty"`
}

func (x *SendOnionResponse) Reset() {
	*x = SendOnionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_switchrpc_switch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendOnionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOnionResponse) ProtoMessage() {}

func (x *SendOnionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_switchrpc_switch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOnionResponse.ProtoReflect.Descriptor instead.
func (*SendOnionResponse) Descriptor() ([]byte, []int) {
	return file_switchrpc_switch_proto_rawDescGZIP(), []int{1}
}

func (x *SendOnionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendOnionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SendOnionResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

var File_switchrpc_switch_proto protoreflect.FileDescriptor

var file_switchrpc_switch_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x72, 0x70, 0x63, 0x22, 0xd1, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x6e, 0x69, 0x6f,
	0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6f, 0x6e,
	0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x48, 0x6f, 0x70, 0x50, 0x75, 0x62, 0x6b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64,
	0x4f, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x2a, 0xa8, 0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x49, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01,
	0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x46,
	0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x43, 0x4c, 0x45, 0x41, 0x52, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x03, 0x12, 0x29, 0x0a, 0x25, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x55, 0x4e, 0x52, 0x45, 0x41, 0x44, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x55, 0x52, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x04, 0x12, 0x1d, 0x0a,
	0x19, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x55, 0x50, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x48, 0x54, 0x4c, 0x43, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x4c, 0x49,
	0x4e, 0x4b, 0x10, 0x06, 0x12, 0x1d, 0x0a, 0x19, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x58, 0x49, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x08, 0x32, 0x50, 0x0a, 0x06,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x6e,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x4f, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x31,
	0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6c, 0x6e,
	0x64, 0x2f, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x72, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_switchrpc_switch_proto_rawDescOnce sync.Once
	file_switchrpc_switch_proto_rawDescData = file_switchrpc_switch_proto_rawDesc
)

func file_switchrpc_switch_proto_rawDescGZIP() []byte {
	file_switchrpc_switch_proto_rawDescOnce.Do(func() {
		file_switchrpc_switch_proto_rawDescData = protoimpl.X.CompressGZIP(file_switchrpc_switch_proto_rawDescData)
	})
	return file_switchrpc_switch_proto_rawDescData
}

var file_switchrpc_switch_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_switchrpc_switch_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_switchrpc_switch_proto_goTypes = []interface{}{
	(ErrorCode)(0),            // 0: switchrpc.ErrorCode
	(*SendOnionRequest)(nil),  // 1: switchrpc.SendOnionRequest
	(*SendOnionResponse)(nil), // 2: switchrpc.SendOnionResponse
}
var file_switchrpc_switch_proto_depIdxs = []int32{
	0, // 0: switchrpc.SendOnionResponse.error_code:type_name -> switchrpc.ErrorCode
	1, // 1: switchrpc.Switch.SendOnion:input_type -> switchrpc.SendOnionRequest
	2, // 2: switchrpc.Switch.SendOnion:output_type -> switchrpc.SendOnionResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_switchrpc_switch_proto_init() }
func file_switchrpc_switch_proto_init() {
	if File_switchrpc_switch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_switchrpc_switch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOnionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_switchrpc_switch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendOnionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_switchrpc_switch_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_switchrpc_switch_proto_goTypes,
		DependencyIndexes: file_switchrpc_switch_proto_depIdxs,
		EnumInfos:         file_switchrpc_switch_proto_enumTypes,
		MessageInfos:      file_switchrpc_switch_proto_msgTypes,
	}.Build()
	File_switchrpc_switch_proto = out.File
	file_switchrpc_switch_proto_rawDesc = nil
	file_switchrpc_switch_proto_goTypes = nil
	file_switchrpc_switch_proto_depIdxs = nil
}
