// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package switchrpc

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SwitchClient is the client API for Switch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SwitchClient interface {
}

type switchClient struct {
	cc grpc.ClientConnInterface
}

func NewSwitchClient(cc grpc.ClientConnInterface) SwitchClient {
	return &switchClient{cc}
}

// SwitchServer is the server API for Switch service.
// All implementations must embed UnimplementedSwitchServer
// for forward compatibility
type SwitchServer interface {
	mustEmbedUnimplementedSwitchServer()
}

// UnimplementedSwitchServer must be embedded to have forward compatible implementations.
type UnimplementedSwitchServer struct {
}

func (UnimplementedSwitchServer) mustEmbedUnimplementedSwitchServer() {}

// UnsafeSwitchServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SwitchServer will
// result in compilation errors.
type UnsafeSwitchServer interface {
	mustEmbedUnimplementedSwitchServer()
}

func RegisterSwitchServer(s grpc.ServiceRegistrar, srv SwitchServer) {
	s.RegisterService(&Switch_ServiceDesc, srv)
}

// Switch_ServiceDesc is the grpc.ServiceDesc for Switch service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Switch_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "switchrpc.Switch",
	HandlerType: (*SwitchServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "switchrpc/switch.proto",
}
